<launch>
  <arg name="device" default="cuda:0" /> <!-- cpu or cuda -->
  <arg name="input_image" default="/kinect_head/rgb/image_rect_color"/>
  <arg name="model_type" default="vit_t" /> <!-- SAM model : vit_t, vit_b, vit_l, vit_h ,vit_b_hq, vit_l_hq, vit_h_hq -->
  <arg name="mode" default="prompt" /> <!-- SAM mode : prompt, automatic -->
  <arg name="num_slots" default="10" /> <!-- max num of mask generation when automatic mode -->
  <arg name="get_mask" default="false" /> <!-- get mask when grounding detection -->
  <arg name="track" default="false" />
  <arg name="with_bbox" default="true" /> <!-- false if faster, but for visualization -->
  <arg name="refine_mask" default="true" /> <!-- refine mask predicts twice to refine mask -->

  <!-- grounding_dino_node -->
  <node name="grounding_dino_node"
          pkg="tracking_ros" type="grounding_dino_node.py"
          output="screen" >
    <remap from="~input_image" to="$(arg input_image)" />
    <rosparam subst_value="true" >
        device: $(arg device)
        get_mask: $(arg get_mask)
    </rosparam>
  </node>

  <!-- sam node -->
  <node name="sam_node"
          pkg="tracking_ros" type="sam_node.py"
          output="screen" if="$(arg get_mask)">
    <remap from="~input_image" to="$(arg input_image)" />
    <rosparam subst_value="true" >
        device: $(arg device)
        model_type: $(arg model_type)
        mode: $(arg mode)
        num_slots: $(arg num_slots)
        interactive_mode: false
        refine_mask: $(arg refine_mask)
    </rosparam>
  </node>

  <!-- cutie node -->
  <node name="cutie_node"
        pkg="tracking_ros" type="cutie_node.py"
        output="screen" if="$(arg track)">
    <remap from="~input_image" to="$(arg input_image)" />
    <remap from="~input_segmentation" to="/sam_node/output/segmentation" />
    <rosparam subst_value="true" >
        device: $(arg device)
        with_bbox: $(arg with_bbox)
    </rosparam>
  </node>
</launch>
